admin:
  address:
    socket_address:
      protocol: TCP
      address: 0.0.0.0
      port_value: 9901

static_resources:
  listeners:
  # - name: listener_0
  #   address:
  #     socket_address:
  #       address: 0.0.0.0
  #       port_value: 10000
  #   filter_chains:
  #   - filters:
  #     - name: envoy.filters.network.http_connection_manager
  #       typed_config:
  #         "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
  #         scheme_header_transformation:
  #           scheme_to_overwrite: https
  #         stat_prefix: ingress_http
  #         route_config:
  #           name: local_route
  #           virtual_hosts:
  #           - name: local_service
  #             domains: ["*"]
  #             routes:
  #             - match:
  #                 prefix: "/"
  #               route:
  #                 host_rewrite_literal: www.envoyproxy.io
  #                 cluster: service_envoyproxy_io
  #         http_filters:
  #         - name: envoy.filters.http.router
  #           typed_config:
  #             "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

  - name: listener_1
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 10001
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          scheme_header_transformation:
            scheme_to_overwrite: https
          stat_prefix: health_check
          access_log:
          - name: envoy.access_loggers.stdout
            typed_config:
              "@type": "type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog"
              log_format:
                text_format: |
                  ===
                  timestamp      : %START_TIME%
                  request        : %REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL% %RESPONSE_CODE%
                  duration       : %DURATION%
                  upstream       : %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)%
                  x-forwarded-for: %REQ(X-FORWARDED-FOR)%
                  authority      : %REQ(:AUTHORITY)%
                  upstream host  : %UPSTREAM_HOST%
                  ===
          route_config:
            name: static_route
            virtual_hosts:
            - name: static_route_hosts
              domains: ["*"]
              routes:
              - match:
                  prefix: "/"
                route:
                  host_rewrite_literal: localhost:8080
                  cluster: fastapi
          http_filters:
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

  clusters:
  # - name: service_envoyproxy_io
  #   connect_timeout: 30s
  #   type: LOGICAL_DNS
  #   # Comment out the following line to test on v6 networks
  #   dns_lookup_family: V4_ONLY
  #   lb_policy: ROUND_ROBIN
  #   load_assignment:
  #     cluster_name: service_envoyproxy_io
  #     endpoints:
  #     - lb_endpoints:
  #       - endpoint:
  #           address:
  #             socket_address:
  #               address: www.envoyproxy.io
  #               port_value: 443
  #   transport_socket:
  #     name: envoy.transport_sockets.tls
  #     typed_config:
  #       "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
  #       sni: www.envoyproxy.io

  - name: fastapi
    connect_timeout: 30s
    type: LOGICAL_DNS
    dns_lookup_family: V4_ONLY
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: fastapi
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: web
                port_value: 8080

